{"version":3,"file":"static/js/174.e01fee31.chunk.js","mappings":"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","sources":["components/ExpensesReportElement/ExpensesReportElement.styled.js","components/ExpensesReportElement/ExpensesReportElement.jsx","components/ExpensesReport/ExpensesReport.styled.js","hooks/useWindowDimensions.js","webpack://kapusta/./src/components/ChartReport/ChartReport.module.css?4f74","components/ChartReport/ChartReport.jsx","components/ExpensesReport/ExpensesReport.jsx","components/IncomesReportElement/IncomesReportElement.jsx","components/IncomesReport/IncomesReport.jsx","components/ReportByCategories/ReportByCategories.styled.js","components/ReportByCategories/ReportByCategories.jsx","components/TotalTransactionsData/TotalTransactionsData.styled.js","components/TotalTransactionsData/TotalTransactionsData.jsx","pages/ReportsPage/ReportsPage.styled.js","components/Reports/ReportsNav/Slider/SliderUtils.jsx","components/Reports/ReportsNav/Slider/ButtonsNextPrev/ButtonsNextPrev.styled.js","images/reportsFiles/reports.svg","components/Reports/ReportsNav/Slider/ButtonsNextPrev/ButtonsNextPrev.jsx","components/Reports/ReportsNav/Slider/Calendar/Calendar.styled.jsx","components/Reports/ReportsNav/Slider/Calendar/Calendar.jsx","components/Reports/ReportsNav/Slider/Slider.styled.jsx","components/Reports/ReportsNav/Slider/Slider.jsx","pages/ReportsPage/ReportsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ExpensesItem = styled.li`\n  width: calc(100% / 3);\n  display: flex;\n  flex-direction: column;\n  /* align-items: stretch; */\n  flex-grow: 1;\n  &:nth-child(3n + 1)::after {\n    content: '';\n    display: block;\n    width: 280px;\n    height: 1px;\n    position: absolute;\n    /* bottom: 4px; */\n    background-color: #e0e5eb;\n  }\n  @media screen and (min-width: 768px) {\n  }\n\n  @media screen and (min-width: 1280px) {\n  }\n`;\nexport const Container = styled.div`\n  flex-grow: 1;\n  margin-bottom: 20px;\n  /* display: flex;\n  flex-direction: column; */\n`;\n\nexport const Total = styled.p`\n  margin-bottom: 5px;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 14px;\n  letter-spacing: 0.04em;\n  text-transform: uppercase;\n  text-align: center;\n  color: #52555f;\n`;\n\nexport const Label = styled.p`\n  flex-grow: 1;\n  margin-top: 5px;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 14px;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  color: #52555f;\n`;\n","import {\n  Container,\n  ExpensesItem,\n  Label,\n  Total,\n} from './ExpensesReportElement.styled';\n\nexport const ExpensesReportElement = ({ label, total, url }) => {\n  const numberWithSpaces = num => {\n    return num.toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n  };\n\n  return (\n    <ExpensesItem>\n      <Container>\n        <Total>{numberWithSpaces(total)}</Total>\n        <img src={url} alt={label} />\n        <Label>{label}</Label>\n      </Container>\n    </ExpensesItem>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ExpensesList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  row-gap: 20px;\n  position: relative;\n\n  @media screen and (min-width: 768px) {\n  }\n\n  @media screen and (min-width: 1280px) {\n  }\n`;\n","import { useEffect, useState } from 'react';\n\nexport function useWindowDimensions() {\n  const isInBrowserEnvironment = typeof window === 'object';\n\n  const [windowSize, setWindowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n\n  useEffect(() => {\n    if (!isInBrowserEnvironment) {\n      return false;\n    }\n\n    function getWindowDimensions() {\n      return {\n        width: window.innerWidth,\n        height: window.innerHeight,\n      };\n    }\n    function handleResize() {\n      setWindowSize(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [isInBrowserEnvironment]);\n  return windowSize;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"rechartContainer\":\"ChartReport_rechartContainer__C9uOQ\"};","import { useWindowDimensions } from 'hooks/useWindowDimensions';\n\nimport { useSelector } from 'react-redux';\nimport {\n  BarChart,\n  Bar,\n  Cell,\n  LabelList,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n} from 'recharts';\nimport { selectCurrentReport } from 'redux/Transactions/selectors';\nimport css from './ChartReport.module.css';\n\nexport default function ChartReport({ sortEntries }) {\n  const curReport = useSelector(selectCurrentReport);\n\n  const expensesDictionary = {\n    Продукты: 'Products',\n    Алкоголь: 'Alcohol',\n    Развлечения: 'Entertainment',\n    Здоровье: 'Health',\n    Транспорт: 'Transport',\n    'Всё для дома': 'Housing',\n    Техника: 'Technique',\n    'Коммуналка и связь': 'Communal, communication',\n    'Спорт и хобби': 'Sports, hobbies',\n    Образование: 'Education',\n    Прочее: 'Other',\n  };\n\n  const incomesDictionary = {\n    'З/П': 'Salary',\n    'Доп. доход': 'Add. income',\n  };\n\n  const thesaurus =\n    curReport === 'Expenses' ? expensesDictionary : incomesDictionary;\n\n  const data = sortEntries.map(item => {\n    if (thesaurus[item.name]) {\n      return { ...item, name: thesaurus[item.name] };\n    }\n    return item;\n  });\n\n  const { width: screenWidth } = useWindowDimensions();\n\n  const renderCustomBarLabel = ({ x, y, width, value }) => {\n    if (screenWidth < 768) {\n      return (\n        <text\n          x={(window.innerWidth - 40) * 0.8}\n          y={y - 4}\n          fill=\"#666\"\n          // textAnchor=\"middle\"\n          dy={-10}\n          fontSize={10}\n        >{`${value} UAH`}</text>\n      );\n    }\n    return (\n      <text\n        x={x + width / 2}\n        y={y}\n        fill=\"#666\"\n        textAnchor=\"middle\"\n        dy={-10}\n        fontSize={10}\n      >{`${value} UAH`}</text>\n    );\n  };\n\n  const RenderCategoryLabel = ({ x, y, value, width, height }) => {\n    if (screenWidth < 768) {\n      return (\n        <text\n          x={x}\n          y={y - 4}\n          dy={-10}\n          fontSize={10}\n          fill=\"#666\"\n          textAnchor=\"start\"\n        >\n          {value}\n        </text>\n      );\n    }\n    // return (\n    //   <text x={x} y={y + height + 20} dy={-10} fontSize={10} textAnchor=\"start\">\n    //     {value}\n    //   </text>\n    // );\n  };\n\n  return (\n    <div className={css.rechartContainer}>\n      <BarChart\n        width={\n          window.screen.width < 768\n            ? window.screen.width - 40\n            : window.screen.width < 1280\n            ? 635\n            : 758\n        }\n        height={window.screen.width < 768 ? data.length * 50 : 422}\n        data={data}\n        margin={{ top: 20 }}\n        // margin={{ top: 50, right: 15, bottom: 15, left: 15 }}\n        layout={window.screen.width < 768 ? 'vertical' : 'horizontal'}\n      >\n        {screenWidth < 768 ? (\n          <>\n            <XAxis axisLine={false} type=\"number\" hide />\n            <YAxis dataKey=\"name\" type=\"category\" hide />\n          </>\n        ) : (\n          <>\n            <YAxis axisLine={false} type=\"number\" hide tickCount={6} />\n            <XAxis dataKey=\"name\" type=\"category\" />\n            <CartesianGrid vertical={false} />\n          </>\n        )}\n        <Bar\n          domain={[0, 400]}\n          dataKey=\"total\"\n          barSize={window.screen.width < 768 ? 15 : 38}\n          radius={window.screen.width < 768 ? [0, 10, 10, 0] : [10, 10, 0, 0]}\n          label={renderCustomBarLabel}\n        >\n          <LabelList\n            dataKey=\"name\"\n            content={<RenderCategoryLabel />}\n            fill=\"#52555F\"\n          />\n          {data.map((entry, index) => (\n            <Cell\n              key={`cell-${index}`}\n              fill={index % 3 === 0 ? '#FF751D' : '#FFDAC0'}\n            />\n          ))}\n        </Bar>\n      </BarChart>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { selectTransactionDataExpensesData } from 'redux/Transactions/selectors';\n\nimport imgProducts from '../../images/expensesReport/Products.png';\nimport imgAlcohol from '../../images/expensesReport/Alcohol.png';\nimport imgEntertainment from '../../images/expensesReport/Entertainment.png';\nimport imgHealth from '../../images/expensesReport/Health.png';\nimport imgTransport from '../../images/expensesReport/Transport.png';\nimport imgHousing from '../../images/expensesReport/Housing.png';\nimport imgTechnique from '../../images/expensesReport/Technique.png';\nimport imgCommunal from '../../images/expensesReport/Communal_communication.png';\nimport imgSports from '../../images/expensesReport/Sports_hobbies.png';\nimport imgEducation from '../../images/expensesReport/Education.png';\nimport imgOther from '../../images/expensesReport/Other.png';\nimport { ExpensesReportElement } from 'components/ExpensesReportElement/ExpensesReportElement';\nimport { ExpensesList } from './ExpensesReport.styled';\nimport ChartReport from 'components/ChartReport/ChartReport';\n\nexport const ExpensesReport = () => {\n  const expensesData = useSelector(selectTransactionDataExpensesData);\n\n  const entries = Object.entries(expensesData ?? {});\n\n  const sortEntries = [...entries]\n    .sort((firstEl, secondEl) => {\n      return secondEl[1].total - firstEl[1].total;\n    })\n    .map(el => {\n      return { name: el[0], total: el[1].total };\n    });\n\n  const expensesDictionary = {\n    Продукты: { label: 'Products', img: imgProducts },\n    Алкоголь: { label: 'Alcohol', img: imgAlcohol },\n    Развлечения: { label: 'Entertainment', img: imgEntertainment },\n    Здоровье: { label: 'Health', img: imgHealth },\n    Транспорт: { label: 'Transport', img: imgTransport },\n    'Всё для дома': { label: 'Housing', img: imgHousing },\n    Техника: { label: 'Technique', img: imgTechnique },\n    'Коммуналка и связь': {\n      label: 'Communal, communication',\n      img: imgCommunal,\n    },\n    'Спорт и хобби': { label: 'Sports, hobbies', img: imgSports },\n    Образование: { label: 'Education', img: imgEducation },\n    Прочее: { label: 'Other', img: imgOther },\n  };\n\n  return (\n    <div>\n      {Boolean(expensesData) ? (\n        <>\n          <ExpensesList>\n            {sortEntries.map(el => {\n              return (\n                <ExpensesReportElement\n                  key={expensesDictionary[el.name].label}\n                  label={expensesDictionary[el.name].label}\n                  total={el.total}\n                  url={expensesDictionary[el.name].img}\n                />\n              );\n            })}\n          </ExpensesList>\n          {sortEntries.length ? (\n            <ChartReport sortEntries={sortEntries} />\n          ) : null}\n        </>\n      ) : (\n        <div>\n          <p>No data</p>\n        </div>\n      )}\n    </div>\n  );\n};\n","export const IncomesReportElement = ({ label, total, url }) => {\n  const numberWithSpaces = num => {\n    return num.toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n  };\n\n  return (\n    <li>\n      <p>{numberWithSpaces(total)}</p>\n      <img src={url} alt={label} />\n      <p>{label}</p>\n    </li>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { selectTransactionDataIncomesData } from 'redux/Transactions/selectors';\n\nimport imgSalary from '../../images/incomesReport/Salary.png';\nimport imgAddincome from '../../images/incomesReport/Add_income.png';\nimport { IncomesReportElement } from 'components/IncomesReportElement/IncomesReportElement';\nimport ChartReport from 'components/ChartReport/ChartReport';\n\nexport const IncomesReport = () => {\n  const incomesData = useSelector(selectTransactionDataIncomesData);\n  //   console.log('incomesData', incomesData);\n\n  const entries = Object.entries(incomesData ?? {});\n  //   console.log('entries', entries);\n\n  const sortEntries = [...entries]\n    .sort((firstEl, secondEl) => {\n      return secondEl[1].total - firstEl[1].total;\n    })\n    .map(el => {\n      return { name: el[0], total: el[1].total };\n    });\n\n  const incomesDictionary = {\n    'З/П': { label: 'Salary', img: imgSalary },\n    'Доп. доход': { label: 'Add. income', img: imgAddincome },\n  };\n\n  return (\n    <div>\n      {Boolean(incomesData) ? (\n        <>\n          <ul>\n            {sortEntries.map(el => {\n              return (\n                <IncomesReportElement\n                  key={incomesDictionary[el.name].label}\n                  label={incomesDictionary[el.name].label}\n                  total={el.total}\n                  url={incomesDictionary[el.name].img}\n                />\n              );\n            })}\n          </ul>\n          {sortEntries.length ? (\n            <ChartReport sortEntries={sortEntries} />\n          ) : null}\n        </>\n      ) : (\n        <div>\n          <p>No data</p>\n        </div>\n      )}\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\nimport { GrFormNext, GrFormPrevious } from 'react-icons/gr';\n\nexport const ReportType = styled.div`\n  background-color: #ffffff;\n  display: flex;\n  margin-bottom: 20px;\n\n  @media screen and (min-width: 768px) {\n  }\n\n  @media screen and (min-width: 1280px) {\n  }\n`;\n\nexport const ReportName = styled.p`\n  margin: 0 16px;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 16px;\n  text-align: center;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n`;\n\nexport const BtnReport = styled.button`\n  background-color: transparent;\n`;\n\nexport const GrFormPreviousStyled = styled(GrFormPrevious)`\n  & polyline {\n    stroke: #ff751d;\n  }\n`;\nexport const GrFormNextStyled = styled(GrFormNext)`\n  & polyline {\n    stroke: #ff751d;\n  }\n`;\n","import { ExpensesReport } from 'components/ExpensesReport/ExpensesReport';\nimport { IncomesReport } from 'components/IncomesReport/IncomesReport';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectCurrentReport } from 'redux/Transactions/selectors';\nimport { changeReportType } from 'redux/Transactions/TransactionsSlice';\nimport {\n  BtnReport,\n  GrFormNextStyled,\n  GrFormPreviousStyled,\n  ReportName,\n  ReportType,\n} from './ReportByCategories.styled';\n\nexport const ReportByCategories = () => {\n  const curReport = useSelector(selectCurrentReport);\n  // console.log(curReport);\n\n  const dispatch = useDispatch();\n\n  const toggleReportType = () => {\n    dispatch(changeReportType(curReport));\n  };\n\n  return (\n    <div>\n      <ReportType>\n        <BtnReport onClick={toggleReportType}>\n          <GrFormPreviousStyled />\n        </BtnReport>\n        <ReportName>{curReport}</ReportName>\n        <BtnReport onClick={toggleReportType}>\n          <GrFormNextStyled />\n        </BtnReport>\n      </ReportType>\n\n      {curReport === 'Expenses' ? <ExpensesReport /> : <IncomesReport />}\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  height: 85px;\n  margin-bottom: 32px;\n  padding: 20px 10px 25px 10px;\n  display: flex;\n  justify-content: center;\n  box-shadow: 5px 10px 20px rgba(170, 178, 197, 0.4);\n  border-radius: 20px;\n  position: relative;\n  @media screen and (min-width: 768px) {\n    height: 50px;\n    padding: 15px 134px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding: 15px 299px;\n  }\n`;\n\nexport const TotalData = styled.div`\n  width: calc((100%-1px) / 2);\n  align-items: center;\n  text-align: center;\n\n  &:last-child::before {\n    content: '';\n    display: block;\n    width: 1px;\n    height: 70px;\n    position: absolute;\n    bottom: 4px;\n    background-color: #e0e5eb;\n  }\n  @media screen and (min-width: 768px) {\n    display: flex;\n    justify-content: flex-start;\n    &:first-of-type {\n      justify-content: flex-end;\n      margin-right: 20px;\n    }\n    &:last-child::before {\n      height: 36px;\n    }\n  }\n\n  @media screen and (min-width: 1280px) {\n  }\n`;\n\nexport const Type = styled.p`\n  margin-bottom: 4px;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 16px;\n  color: #52555f;\n  @media screen and (min-width: 768px) {\n    margin-bottom: 0px;\n    margin-right: 15px;\n    &:first-of-type {\n      margin-left: 20px;\n    }\n  }\n`;\n\nexport const Total = styled.p`\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 16px;\n  letter-spacing: 0.04em;\n  color: ${({ typeReport }) =>\n    typeReport === 'Expenses' ? '#E53935' : '#407946'};\n`;\n","import { useSelector } from 'react-redux';\nimport {\n  selectTransactionDataExpenses,\n  selectTransactionDataIncomes,\n} from 'redux/Transactions/selectors';\nimport {\n  Container,\n  Total,\n  TotalData,\n  Type,\n} from './TotalTransactionsData.styled';\n\nexport const TotalTransactionsData = () => {\n  const dataIncomes = useSelector(selectTransactionDataIncomes);\n  const dataExpenses = useSelector(selectTransactionDataExpenses);\n\n  return (\n    <Container>\n      <TotalData>\n        <Type>Expenses:</Type>\n        {/* <Total typeReport={'Expenses'}>- 18 000.00 UAH.</Total> */}\n\n        <Total typeReport={'Expenses'}>\n          {dataExpenses ? dataExpenses.expenseTotal : '0'}\n        </Total>\n      </TotalData>\n\n      <TotalData>\n        <Type>Income:</Type>\n        {/* <Total typeReport={'Income'}>+ 45 000.00 UAH.</Total> */}\n\n        <Total typeReport={'Income'}>\n          {dataIncomes ? dataIncomes.incomeTotal : '0'}\n        </Total>\n      </TotalData>\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const MainContainer = styled.div`\n  padding: 16px 20px 52px 20px;\n  @media screen and (min-width: 768px) {\n    padding: 40px 32px 80px 32px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding: 40px 123px 80px 123px;\n  }\n`;\n","const dateNow = new Date();\n\nexport const monthNames = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nexport const getMonth = () => dateNow.getMonth();\nexport const getYear = () => dateNow.getFullYear();","import styled from '@emotion/styled';\n\n\nexport const ButtonBox = styled.div`\nmargin-top: 5px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\nexport const Button = styled.button`\n  background-color: transparent;\n  border: transparent;\n  padding: 0%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`","var _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgReports(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-prev\",\n    viewBox: \"0 0 19 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#ff751d\",\n    style: {\n      stroke: \"var(--color2, #ff751d)\"\n    },\n    strokeLinejoin: \"miter\",\n    strokeLinecap: \"butt\",\n    strokeMiterlimit: 4,\n    strokeWidth: 5.3333,\n    d: \"M16 2.667l-10.667 13.333 10.667 13.333\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-next\",\n    viewBox: \"0 0 19 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#ff751d\",\n    style: {\n      stroke: \"var(--color2, #ff751d)\"\n    },\n    strokeLinejoin: \"miter\",\n    strokeLinecap: \"butt\",\n    strokeMiterlimit: 4,\n    strokeWidth: 5.3333,\n    d: \"M2.667 2.667l10.667 13.333-10.667 13.333\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgReports);\nexport default __webpack_public_path__ + \"static/media/reports.22c7d3ee7969e983d42c47aef02ec127.svg\";\nexport { ForwardRef as ReactComponent };","import PropTypes from 'prop-types';\nimport { ButtonBox, Button } from './ButtonsNextPrev.styled';\nimport reports from '../../../../../images/reportsFiles/reports.svg';\n\nexport const ButtonsNextPrev = ({ onButtonClick, children }) => {\n  const handlerClick = event => {\n    const name = event.currentTarget.name;\n    onButtonClick(name);\n  };\n\n  return (\n    <ButtonBox>\n      <Button name=\"decrement\" onClick={handlerClick}>\n        <svg width=\"6\" height=\"12\">\n          <use href={`${reports}#icon-prev`}></use>\n        </svg>\n      </Button>\n      {children}\n      <Button name=\"increment\" onClick={handlerClick}>\n        <svg width=\"6\" height=\"12\">\n          <use href={`${reports}#icon-next`}></use>\n        </svg>\n      </Button>\n    </ButtonBox>\n  );\n};\n\nButtonsNextPrev.propTypes = {\n  onButtonClick: PropTypes.func.isRequired,\n};","import styled from '@emotion/styled';\n\n\nexport const Backdrop = styled.div`\n    z-index: 2;\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0%;\n    background-color:rgba(0, 0, 0, 0.5);\n    \n`\n\nexport const CalendarBox = styled.div`\n    position: absolute;\n    background-color: #fff;\n    z-index: 10;\n    width: 60%;\n    border-radius: 20px;\n    padding: 10px 0;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%) ;\n`\n\nexport const Month = styled.li`\nfont-weight: 700;\nfont-size: 14px;\nline-height: 1.22;\ncolor: #52555F;\n&.active{\n    color: #FF751D;\n}\n`\n\nexport const Year = styled.p`\nfont-weight: 700;\nfont-size: 14px;\nline-height: 16px;\nletter-spacing: 0.02em;\ncolor: #000000;\npadding: 0 10px;\n`","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { monthNames } from '../SliderUtils';\nimport { ButtonsNextPrev } from '../ButtonsNextPrev/ButtonsNextPrev';\nimport { Month, Year, CalendarBox, Backdrop } from './Calendar.styled';\n\n\nexport const Calendar = ({\n  onClose,\n  currentMonth,\n  currentYear,\n  onChangeDate,\n}) => {\n\n  const handleYear = name => {\n    onChangeDate(name);\n  };\n\n  const handleMonth = event => {\n    const choosedMonth = event.currentTarget.textContent;\n    const name = monthNames.indexOf(choosedMonth);\n    onChangeDate(name);\n  };\n\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n\n  const handleBackdrop = event => {\n    if (event.target === event.currentTarget) {\n      onClose();\n    }\n  };\n\n  const handleKeyDown = event => {\n    if (event.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  return (\n    <Backdrop onClick={handleBackdrop}>\n      <CalendarBox>\n        <ButtonsNextPrev onButtonClick={handleYear}>\n          {' '}\n          <Year>{currentYear}</Year>\n        </ButtonsNextPrev>\n\n        <ul>\n          {monthNames.map(el => {\n            return (\n              <Month\n                className={el === currentMonth ? 'active' : ''}\n                onClick={handleMonth}\n                key={el}\n              >\n                {el}\n              </Month>\n            );\n          })}\n        </ul>\n      </CalendarBox>\n    </Backdrop>\n  );\n};\n\nCalendar.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  currentMonth: PropTypes.string.isRequired,\n  currentYear: PropTypes.number.isRequired,\n  onChangeDate: PropTypes.func.isRequired,\n};","import styled from '@emotion/styled';\n\n\nexport const SliderBox = styled.div`\n  padding-top: 16px;\n  text-align: center;\n  position: relative;\n  @media (min-width: 768px){\n  padding-top: 0;\n  }\n`\n\nexport const SliderText = styled.button`\n   font-weight: 700;\n  font-size: 14px;\n  line-height: 16px;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  padding: 0 5px;\n  border: none;\n  color: #000000;\n`","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n// import { getReports } from 'redux/Transactions/TransactionsOperations';\nimport { monthNames, getMonth, getYear } from './SliderUtils';\nimport { Calendar } from './Calendar/Calendar';\nimport { SliderBox, SliderText } from './Slider.styled';\nimport { ButtonsNextPrev } from './ButtonsNextPrev/ButtonsNextPrev';\n// import { reportsQueryAction } from 'redux/reportsQuery/reportsQuery.slice';\n// import { filteredDataAction } from 'redux/reportsQuery/reportsQuery.slice';\nimport { useSearchParams } from 'react-router-dom';\nimport { getPeriodData } from 'redux/Transactions/TransactionsOperations';\nimport { setReportsQuery } from 'redux/Transactions/TransactionsSlice';\n\nexport const Slider = () => {\n  const [monthNumber, setMonthNumber] = useState(0);\n  const [month, setMonth] = useState('');\n  const [year, setYear] = useState('');\n  const [modalCalendar, setModalCalendar] = useState(false);\n\n  const dispatch = useDispatch();\n  const [searchParams, setSearchParams] = useSearchParams();\n  console.log(searchParams);\n\n  useEffect(() => {\n    setMonthNumber(getMonth());\n    setMonth(monthNames[getMonth()]);\n    setYear(getYear());\n  }, []);\n\n  useEffect(() => {\n    setMonth(monthNames[monthNumber]);\n    let monthString = '';\n\n    if (monthNumber + 1 < 10) {\n      monthString = '0' + (monthNumber + 1);\n    } else {\n      monthString = monthNumber + 1;\n    }\n    const query = `${year}-${monthString}`;\n    // if (query !== '-01') dispatch(getReports(query));\n    if (query === '-01') return;\n    console.log(query);\n    setSearchParams({ date: query });\n\n    dispatch(setReportsQuery(query));\n    dispatch(getPeriodData(query));\n\n    // dispatch(reportsQueryAction(`${year}-${monthString}`));\n  }, [monthNumber, year, dispatch, setSearchParams]);\n\n  const handlerClick = name => {\n    switch (name) {\n      case 'decrement':\n        // dispatch(filteredDataAction([]));\n        setMonthNumber(monthNumber - 1);\n        if (monthNumber === 0) {\n          setMonthNumber(11);\n          setYear(year - 1);\n        }\n        break;\n      case 'increment':\n        // dispatch(filteredDataAction([]));\n        setMonthNumber(monthNumber + 1);\n        if (monthNumber === 11) {\n          setMonthNumber(0);\n          setYear(year + 1);\n        }\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleModalCalendar = () => {\n    setModalCalendar(modalCalendar => !modalCalendar);\n  };\n\n  const handleCalendar = name => {\n    switch (name) {\n      case 'decrement':\n        setYear(year - 1);\n\n        break;\n      case 'increment':\n        setYear(year + 1);\n        break;\n      default:\n        setMonthNumber(name);\n        return;\n    }\n  };\n\n  return (\n    <SliderBox>\n      <p>Current period:</p>\n      <ButtonsNextPrev onButtonClick={handlerClick}>\n        <SliderText onClick={handleModalCalendar}>\n          {month} {year}\n        </SliderText>\n      </ButtonsNextPrev>\n      {modalCalendar && (\n        <Calendar\n          currentYear={year}\n          currentMonth={month}\n          onChangeDate={handleCalendar}\n          onClose={handleModalCalendar}\n        />\n      )}\n    </SliderBox>\n  );\n};\n","import { ReportByCategories } from 'components/ReportByCategories/ReportByCategories';\nimport { TotalTransactionsData } from 'components/TotalTransactionsData/TotalTransactionsData';\n// import { useSearchParams } from 'react-router-dom';\n// import { getPeriodData } from 'redux/Transactions/TransactionsOperations';\nimport { MainContainer } from './ReportsPage.styled';\nimport { Slider } from 'components/Reports/ReportsNav/Slider/Slider';\nimport { Loader } from 'components/Loader/Loader';\nimport { useSelector } from 'react-redux';\n// import { getIsloading } from 'redux/Transactions/selectors';\nimport { selectIsRefreshing } from 'redux/user/selectors';\n\n const ReportsPage = () => {\n  // const isLoading = useSelector(getIsloading);\n  const isRefreshing = useSelector(selectIsRefreshing);\n\n  return isRefreshing ? (\n    <Loader />\n  ) : (\n    <MainContainer>\n      {/* {isLoading && <Loader />} */}\n\n      <Slider />\n\n      <TotalTransactionsData />\n      <ReportByCategories />\n    </MainContainer>\n  );\n};\n\nexport default ReportsPage;"],"names":["ExpensesItem","styled","Container","Total","Label","ExpensesReportElement","num","label","total","url","toFixed","replace","src","alt","ExpensesList","useWindowDimensions","isInBrowserEnvironment","window","useState","width","innerWidth","height","innerHeight","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","ChartReport","sortEntries","thesaurus","useSelector","selectCurrentReport","Продукты","Алкоголь","Развлечения","Здоровье","Транспорт","Техника","Образование","Прочее","data","map","item","name","screenWidth","RenderCategoryLabel","x","y","value","dy","fontSize","fill","textAnchor","className","css","BarChart","screen","length","margin","top","layout","XAxis","axisLine","type","hide","YAxis","dataKey","tickCount","CartesianGrid","vertical","Bar","domain","barSize","radius","LabelList","content","entry","index","Cell","ExpensesReport","expensesData","selectTransactionDataExpensesData","entries","Object","sort","firstEl","secondEl","el","expensesDictionary","img","imgProducts","imgAlcohol","imgEntertainment","imgHealth","imgTransport","imgHousing","imgTechnique","imgCommunal","imgSports","imgEducation","imgOther","Boolean","IncomesReportElement","IncomesReport","incomesData","selectTransactionDataIncomesData","incomesDictionary","imgSalary","imgAddincome","ReportType","ReportName","BtnReport","GrFormPreviousStyled","GrFormPrevious","GrFormNextStyled","GrFormNext","ReportByCategories","curReport","dispatch","useDispatch","toggleReportType","changeReportType","onClick","TotalData","Type","typeReport","TotalTransactionsData","dataIncomes","selectTransactionDataIncomes","dataExpenses","selectTransactionDataExpenses","expenseTotal","incomeTotal","MainContainer","dateNow","Date","monthNames","getMonth","ButtonBox","Button","ButtonsNextPrev","onButtonClick","children","handlerClick","event","currentTarget","href","reports","Backdrop","CalendarBox","Month","Year","Calendar","onClose","currentMonth","currentYear","onChangeDate","handleMonth","choosedMonth","textContent","indexOf","handleKeyDown","code","target","SliderBox","SliderText","Slider","monthNumber","setMonthNumber","month","setMonth","year","setYear","modalCalendar","setModalCalendar","useSearchParams","searchParams","setSearchParams","console","log","getFullYear","monthString","query","date","setReportsQuery","getPeriodData","handleModalCalendar","selectIsRefreshing","Loader"],"sourceRoot":""}