{"version":3,"file":"static/js/917.8f27c921.chunk.js","mappings":"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","sources":["components/ExpensesReportElement/ExpensesReportElement.styled.js","components/ExpensesReportElement/ExpensesReportElement.jsx","components/ExpensesReport/ExpensesReport.styled.js","hooks/useWindowDimensions.js","webpack://kapusta/./src/components/ChartReport/ChartReport.module.css?4f74","components/ChartReport/ChartReport.jsx","components/ExpensesReport/ExpensesReport.jsx","components/IncomesReportElement/IncomesReportElement.styled.js","components/IncomesReportElement/IncomesReportElement.jsx","components/IncomesReport/IncomesReport.styled.js","components/IncomesReport/IncomesReport.jsx","components/ReportByCategories/ReportByCategories.styled.js","components/ReportByCategories/ReportByCategories.jsx","components/TotalTransactionsData/TotalTransactionsData.styled.js","components/TotalTransactionsData/TotalTransactionsData.jsx","pages/ReportsPage/ReportsPage.styled.js","pages/ReportsPage/ReportsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ExpensesItem = styled.li`\n  width: calc(100% / 3);\n  display: flex;\n  flex-direction: column-reverse;\n  cursor: pointer;\n  &:hover p:last-of-type,\n  &:focus p:last-of-type {\n    color: #ff751d;\n    font-weight: 700;\n  }\n  @media screen and (max-width: 767px) {\n    &:nth-of-type(3n + 1)::after {\n      content: '';\n      display: block;\n      width: 100%;\n      height: 1px;\n      position: absolute;\n      background-color: #e0e5eb;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    width: calc(100% / 6);\n  }\n`;\n\nexport const Container = styled.div`\n  flex-grow: 1;\n  margin-bottom: 20px;\n  @media screen and (min-width: 768px) {\n    margin-bottom: 0px;\n  }\n`;\n\nexport const Total = styled.p`\n  margin-bottom: 5px;\n  line-height: calc(14 / 12);\n  text-transform: uppercase;\n  text-align: center;\n  color: #52555f;\n`;\n\nexport const Label = styled.p`\n  margin: 0 auto;\n  width: min-content;\n  flex-grow: 1;\n  margin-top: 5px;\n  font-size: 11px;\n  line-height: calc(14 / 12);\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  text-align: center;\n  color: #52555f;\n  @media screen and (min-width: 768px) {\n    font-size: 12px;\n  }\n`;\n\nexport const Image = styled.img`\n  margin: 0 auto;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  Container,\n  ExpensesItem,\n  Image,\n  Label,\n  Total,\n} from './ExpensesReportElement.styled';\n\nexport const ExpensesReportElement = ({\n  label,\n  total,\n  url,\n  handleClick,\n  name,\n}) => {\n  const numberWithSpaces = num => {\n    return num.toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n  };\n\n  return (\n    <ExpensesItem>\n      <Container>\n        <Total>{numberWithSpaces(total)}</Total>\n\n        <Image src={url} alt={label} />\n        <Label>{label}</Label>\n      </Container>\n    </ExpensesItem>\n  );\n};\n\nExpensesReportElement.propTypes = {\n  label: PropTypes.string.isRequired,\n  total: PropTypes.number,\n  url: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ExpensesList = styled.ul`\n  margin-bottom: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  row-gap: 20px;\n  position: relative;\n  @media screen and (min-width: 768px) {\n    justify-content: center;\n    row-gap: 40px;\n    column-gap: 15px;\n  }\n`;\n","import { useEffect, useState } from 'react';\n\nexport function useWindowDimensions() {\n  const isInBrowserEnvironment = typeof window === 'object';\n\n  const [windowSize, setWindowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n\n  useEffect(() => {\n    if (!isInBrowserEnvironment) {\n      return false;\n    }\n\n    function getWindowDimensions() {\n      return {\n        width: window.innerWidth,\n        height: window.innerHeight,\n      };\n    }\n    function handleResize() {\n      setWindowSize(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [isInBrowserEnvironment]);\n  return windowSize;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"rechartContainer\":\"ChartReport_rechartContainer__C9uOQ\"};","import { useWindowDimensions } from 'hooks/useWindowDimensions';\nimport { useSelector } from 'react-redux';\nimport {\n  BarChart,\n  Bar,\n  Cell,\n  LabelList,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n} from 'recharts';\nimport { selectCurrentReport } from 'redux/Transactions/selectors';\nimport css from './ChartReport.module.css';\n\nexport default function ChartReport({ sortEntries }) {\n  const curReport = useSelector(selectCurrentReport);\n\n  const expensesDictionary = {\n    Продукты: 'Products',\n    Алкоголь: 'Alcohol',\n    Развлечения: 'Entertainment',\n    Здоровье: 'Health',\n    Транспорт: 'Transport',\n    'Всё для дома': 'Housing',\n    Техника: 'Technique',\n    'Коммуналка и связь': 'Communal, communication',\n    'Спорт и хобби': 'Sports, hobbies',\n    Образование: 'Education',\n    Прочее: 'Other',\n  };\n\n  const incomesDictionary = {\n    'З/П': 'Salary',\n    'Доп. доход': 'Add. income',\n  };\n\n  const thesaurus =\n    curReport === 'Expenses' ? expensesDictionary : incomesDictionary;\n\n  const data = sortEntries.map(item => {\n    if (thesaurus[item.name]) {\n      return { ...item, name: thesaurus[item.name] };\n    }\n    return item;\n  });\n\n  const { width: screenWidth } = useWindowDimensions();\n\n  const renderCustomBarLabel = ({ x, y, width, value }) => {\n    if (screenWidth < 768) {\n      return (\n        <text\n          x={(window.innerWidth - 40) * 0.8}\n          y={y - 4}\n          fill=\"#666\"\n          // textAnchor=\"middle\"\n          dy={-10}\n          fontSize={10}\n        >{`${value} UAH`}</text>\n      );\n    }\n    return (\n      <text\n        x={x + width / 2}\n        y={y}\n        fill=\"#666\"\n        textAnchor=\"middle\"\n        dy={-10}\n        fontSize={10}\n      >{`${value} UAH`}</text>\n    );\n  };\n\n  const RenderCategoryLabel = ({ x, y, value, width, height }) => {\n    if (screenWidth < 768) {\n      return (\n        <text\n          x={x}\n          y={y - 4}\n          dy={-10}\n          fontSize={10}\n          fill=\"#666\"\n          textAnchor=\"start\"\n        >\n          {value}\n        </text>\n      );\n    }\n    // return (\n    //   <text x={x} y={y + height + 20} dy={-10} fontSize={10} textAnchor=\"start\">\n    //     {value}\n    //   </text>\n    // );\n  };\n\n  return (\n    <div className={css.rechartContainer}>\n      <BarChart\n        width={\n          window.screen.width < 768\n            ? window.screen.width - 40\n            : window.screen.width < 1280\n            ? 635\n            : 758\n        }\n        height={window.screen.width < 768 ? data.length * 50 : 422}\n        data={data}\n        margin={{ top: 20 }}\n        // margin={{ top: 50, right: 15, bottom: 15, left: 15 }}\n        layout={window.screen.width < 768 ? 'vertical' : 'horizontal'}\n      >\n        {screenWidth < 768 ? (\n          <>\n            <XAxis axisLine={false} type=\"number\" hide />\n            <YAxis dataKey=\"name\" type=\"category\" hide />\n          </>\n        ) : (\n          <>\n            <YAxis axisLine={false} type=\"number\" hide tickCount={6} />\n            <XAxis dataKey=\"name\" type=\"category\" />\n            <CartesianGrid vertical={false} />\n          </>\n        )}\n        <Bar\n          domain={[0, 400]}\n          dataKey=\"total\"\n          barSize={window.screen.width < 768 ? 15 : 38}\n          radius={window.screen.width < 768 ? [0, 10, 10, 0] : [10, 10, 0, 0]}\n          label={renderCustomBarLabel}\n        >\n          <LabelList\n            dataKey=\"name\"\n            content={<RenderCategoryLabel />}\n            fill=\"#52555F\"\n          />\n          {data.map((entry, index) => (\n            <Cell\n              key={`cell-${index}`}\n              fill={index % 3 === 0 ? '#FF751D' : '#FFDAC0'}\n            />\n          ))}\n        </Bar>\n      </BarChart>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { selectTransactionDataExpensesData } from 'redux/Transactions/selectors';\n\nimport imgProducts from '../../images/expensesReport/Products.png';\nimport imgAlcohol from '../../images/expensesReport/Alcohol.png';\nimport imgEntertainment from '../../images/expensesReport/Entertainment.png';\nimport imgHealth from '../../images/expensesReport/Health.png';\nimport imgTransport from '../../images/expensesReport/Transport.png';\nimport imgHousing from '../../images/expensesReport/Housing.png';\nimport imgTechnique from '../../images/expensesReport/Technique.png';\nimport imgCommunal from '../../images/expensesReport/Communal_communication.png';\nimport imgSports from '../../images/expensesReport/Sports_hobbies.png';\nimport imgEducation from '../../images/expensesReport/Education.png';\nimport imgOther from '../../images/expensesReport/Other.png';\nimport { ExpensesReportElement } from 'components/ExpensesReportElement/ExpensesReportElement';\nimport { ExpensesList } from './ExpensesReport.styled';\nimport ChartReport from 'components/ChartReport/ChartReport';\nimport { useState } from 'react';\n\nexport const ExpensesReport = () => {\n  const [transactions, setTransactions] = useState({});\n  const expensesData = useSelector(selectTransactionDataExpensesData);\n  const entries = Object.entries(expensesData ?? {});\n\n  const sortEntries = [...entries]\n    .sort((firstEl, secondEl) => {\n      return secondEl[1].total - firstEl[1].total;\n    })\n    .map(el => {\n      return { name: el[0], total: el[1].total };\n    });\n\n  const expensesDictionary = {\n    Продукты: { label: 'Products', img: imgProducts },\n    Алкоголь: { label: 'Alcohol', img: imgAlcohol },\n    Развлечения: { label: 'Entertainment', img: imgEntertainment },\n    Здоровье: { label: 'Health', img: imgHealth },\n    Транспорт: { label: 'Transport', img: imgTransport },\n    'Всё для дома': { label: 'Housing', img: imgHousing },\n    Техника: { label: 'Technique', img: imgTechnique },\n    'Коммуналка и связь': {\n      label: 'Communal, communication',\n      img: imgCommunal,\n    },\n    'Спорт и хобби': { label: 'Sports, hobbies', img: imgSports },\n    Образование: { label: 'Education', img: imgEducation },\n    Прочее: { label: 'Other', img: imgOther },\n  };\n\n  const handleClick = categoryName => {\n    setTransactions(expensesData[categoryName]);\n  };\n\n  const sortedCategoryTransactions = Object.entries(transactions)\n    .filter(([key]) => key !== 'total')\n    .map(([key, value]) => ({ name: key, total: value }))\n    .sort((firstEl, secondEl) => secondEl.total - firstEl.total);\n\n  return (\n    <div>\n      {Boolean(expensesData) ? (\n        <div>\n          <ExpensesList>\n            {sortEntries.map(el => {\n              return (\n                <ExpensesReportElement\n                  key={expensesDictionary[el.name].label}\n                  label={expensesDictionary[el.name].label}\n                  total={el.total}\n                  url={expensesDictionary[el.name].img}\n                  handleClick={handleClick}\n                />\n                // <ExpensesReportElement\n                //   key={expensesDictionary[el.name].label}\n                //   label={expensesDictionary[el.name].label}\n                //   total={el.total}\n                //   url={expensesDictionary[el.name].img}\n                // >\n                //   {expensesDictionary[el.name].img}\n                // </ExpensesReportElement>\n              );\n            })}\n          </ExpensesList>\n          {sortEntries.length ? (\n            <ChartReport\n              sortEntries={\n                sortedCategoryTransactions.length\n                  ? sortedCategoryTransactions\n                  : sortEntries\n              }\n            />\n          ) : null}\n        </div>\n      ) : (\n        <div>\n          <p>No data</p>\n        </div>\n      )}\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const IncomesItem = styled.li`\n  width: calc((100% -20px) / 2);\n  display: flex;\n  flex-direction: column-reverse;\n  @media screen and (max-width: 767px) {\n    &:nth-of-type(1)::after {\n      content: '';\n      display: block;\n      width: 100%;\n      height: 1px;\n      position: absolute;\n      background-color: #e0e5eb;\n    }\n  }\n`;\nexport const Label = styled.p`\n  margin: 0 auto;\n  width: 100%;\n  flex-grow: 1;\n  margin-top: 5px;\n  font-size: 11px;\n  line-height: calc(14 / 12);\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  text-align: center;\n  color: #52555f;\n  @media screen and (min-width: 768px) {\n    font-size: 12px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport {\n  Container,\n  Image,\n  Total,\n} from 'components/ExpensesReportElement/ExpensesReportElement.styled';\nimport { IncomesItem, Label } from './IncomesReportElement.styled';\n\nexport const IncomesReportElement = ({\n  label,\n  total,\n  url,\n  // name,\n  // handleClick,\n}) => {\n  const numberWithSpaces = num => {\n    return num.toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n  };\n\n  return (\n    <IncomesItem>\n      <Container>\n        <Total>{numberWithSpaces(total)}</Total>\n        <Image src={url} alt={label} />\n        <Label>{label}</Label>\n      </Container>\n    </IncomesItem>\n  );\n};\n\nIncomesReportElement.propTypes = {\n  label: PropTypes.string.isRequired,\n  total: PropTypes.number,\n  url: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\nexport const IncomesContainer = styled.div`\n  padding: 0 40px;\n  @media screen and (min-width: 768px) {\n    padding: 0 218px;\n  }\n\n  @media screen and (min-width: 1000px) {\n    padding: 0 160px;\n  }\n`;\nexport const IncomesList = styled.ul`\n  margin-bottom: 20px;\n  display: flex;\n  gap: 20px;\n  justify-content: center;\n  position: relative;\n  @media screen and (min-width: 768px) {\n    margin-bottom: 0px;\n  }\n\n  @media screen and (min-width: 1280px) {\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { selectTransactionDataIncomesData } from 'redux/Transactions/selectors';\n\nimport imgSalary from '../../images/incomesReport/Salary.png';\nimport imgAddincome from '../../images/incomesReport/Add_income.png';\nimport { IncomesReportElement } from 'components/IncomesReportElement/IncomesReportElement';\nimport { IncomesContainer, IncomesList } from './IncomesReport.styled';\nimport ChartReport from 'components/ChartReport/ChartReport';\nimport { useState } from 'react';\n\nexport const IncomesReport = () => {\n  const [transactions, setTransactions] = useState({});\n  const incomesData = useSelector(selectTransactionDataIncomesData);\n  const entries = Object.entries(incomesData ?? {});\n\n  const sortEntries = [...entries]\n    .sort((firstEl, secondEl) => {\n      return secondEl[1].total - firstEl[1].total;\n    })\n    .map(el => {\n      return { name: el[0], total: el[1].total };\n    });\n\n  const incomesDictionary = {\n    'З/П': { label: 'Salary', img: imgSalary },\n    'Доп. доход': { label: 'Add. income', img: imgAddincome },\n  };\n\n  const handleClick = categoryName => {\n    setTransactions(incomesData[categoryName]);\n  };\n\n  const sortedCategoryTransactions = Object.entries(transactions)\n    .filter(([key]) => key !== 'total')\n    .map(([key, value]) => ({ name: key, total: value }))\n    .sort((firstEl, secondEl) => secondEl.total - firstEl.total);\n\n  return (\n    <IncomesContainer>\n      {Boolean(incomesData) ? (\n        <div>\n          <IncomesList>\n            {sortEntries.map(el => {\n              return (\n                <IncomesReportElement\n                  key={incomesDictionary[el.name].label}\n                  label={incomesDictionary[el.name].label}\n                  total={el.total}\n                  url={incomesDictionary[el.name].img}\n                  name={el.name}\n                  handleClick={handleClick}\n                />\n              );\n            })}\n          </IncomesList>\n          {sortEntries.length ? (\n            <ChartReport\n              sortEntries={\n                sortedCategoryTransactions.length\n                  ? sortedCategoryTransactions\n                  : sortEntries\n              }\n            />\n          ) : null}\n        </div>\n      ) : (\n        <div>\n          <p>No data</p>\n        </div>\n      )}\n    </IncomesContainer>\n  );\n};\n","import styled from '@emotion/styled';\nimport { GrFormNext, GrFormPrevious } from 'react-icons/gr';\n\nexport const ReportContainer = styled.div`\n  @media screen and (min-width: 768px) {\n    margin-bottom: 32px;\n    padding: 20px 40px;\n    box-shadow: 0px 10px 60px rgba(170, 178, 197, 0.2);\n    border-radius: 30px;\n    background-color: #ffffff;\n    overflow: hidden;\n  }\n\n  @media screen and (min-width: 1000px) {\n    margin-bottom: 40px;\n    padding: 20px 205px;\n  }\n`;\n\nexport const ReportType = styled.div`\n  background-color: #ffffff;\n  display: flex;\n  justify-content: center;\n  margin-bottom: 20px;\n`;\n\nexport const ReportName = styled.p`\n  margin: 0 16px;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: calc(16/14);\n  text-align: center;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  color: #000000;\n`;\n\nexport const BtnReport = styled.button`\n  background-color: transparent;\n`;\n\nexport const GrFormPreviousStyled = styled(GrFormPrevious)`\n  & polyline {\n    stroke: #ff751d;\n    stroke-width: 3;\n  }\n`;\nexport const GrFormNextStyled = styled(GrFormNext)`\n  & polyline {\n    display: block;\n    stroke: #ff751d;\n    stroke-width: 3;\n    width: 4px;\n    height: 10px;\n  }\n`;\n","import { ExpensesReport } from 'components/ExpensesReport/ExpensesReport';\nimport { IncomesReport } from 'components/IncomesReport/IncomesReport';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectCurrentReport } from 'redux/Transactions/selectors';\nimport { changeReportType } from 'redux/Transactions/TransactionsSlice';\nimport {\n  BtnReport,\n  GrFormNextStyled,\n  GrFormPreviousStyled,\n  ReportContainer,\n  ReportName,\n  ReportType,\n} from './ReportByCategories.styled';\n\nexport const ReportByCategories = () => {\n  const curReport = useSelector(selectCurrentReport);\n  const dispatch = useDispatch();\n\n  const toggleReportType = () => {\n    dispatch(changeReportType(curReport));\n  };\n\n  return (\n    <ReportContainer>\n      <ReportType>\n        <BtnReport onClick={toggleReportType}>\n          <GrFormPreviousStyled />\n        </BtnReport>\n        <ReportName>{curReport}</ReportName>\n        <BtnReport onClick={toggleReportType}>\n          <GrFormNextStyled />\n        </BtnReport>\n      </ReportType>\n\n      {curReport === 'Expenses' ? <ExpensesReport /> : <IncomesReport />}\n    </ReportContainer>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  height: 85px;\n  margin-bottom: 32px;\n  padding: 20px 10px 25px 10px;\n  display: flex;\n  justify-content: center;\n  box-shadow: 5px 10px 20px rgba(170, 178, 197, 0.4);\n  border-radius: 20px;\n  @media screen and (min-width: 768px) {\n    height: 50px;\n    padding: 15px 134px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding: 15px 299px;\n  }\n`;\n\nexport const TotalData = styled.div`\n  width: calc((100%-1px) / 2);\n  align-items: center;\n  text-align: center;\n  &:last-child::before {\n    content: '';\n    display: block;\n    width: 1px;\n    height: 70px;\n    position: absolute;\n    bottom: 4px;\n    background-color: #e0e5eb;\n  }\n  @media screen and (min-width: 768px) {\n    display: flex;\n    justify-content: flex-start;\n    &:first-of-type {\n      justify-content: flex-end;\n      margin-right: 20px;\n    }\n    &:last-child::before {\n      height: 36px;\n    }\n  }\n`;\n\nexport const Type = styled.p`\n  margin-bottom: 4px;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: calc(16 / 14);\n  color: #52555f;\n  @media screen and (min-width: 768px) {\n    margin-bottom: 0px;\n    margin-right: 15px;\n    &:first-of-type {\n      margin-left: 20px;\n    }\n  }\n`;\n\nexport const Total = styled.p`\n  font-weight: 700;\n  font-size: 14px;\n  line-height: calc(16 / 14);\n  color: ${({ typeReport }) =>\n    typeReport === 'Expenses' ? '#E53935' : '#407946'};\n`;\n","import { useSelector } from 'react-redux';\nimport {\n  selectTransactionDataExpenses,\n  selectTransactionDataIncomes,\n} from 'redux/Transactions/selectors';\nimport {\n  Container,\n  Total,\n  TotalData,\n  Type,\n} from './TotalTransactionsData.styled';\n\nexport const TotalTransactionsData = () => {\n  const dataIncomes = useSelector(selectTransactionDataIncomes);\n  const dataExpenses = useSelector(selectTransactionDataExpenses);\n\n  return (\n    <Container>\n      <TotalData>\n        <Type>Expenses:</Type>\n        <Total typeReport={'Expenses'}>\n          {dataExpenses ? `- ${dataExpenses.expenseTotal}` : '0'}\n        </Total>\n      </TotalData>\n\n      <TotalData>\n        <Type>Income:</Type>\n        <Total typeReport={'Income'}>\n          {dataIncomes ? `+ ${dataIncomes.incomeTotal}` : '0'}\n        </Total>\n      </TotalData>\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const MainContainer = styled.div`\n  width: 100%;\n  background-color: #f5f6fb;\n  border-bottom-left-radius: 30%;\n  height: 234px;\n  padding: 16px 20px 52px 20px;\n  @media screen and (min-width: 768px) {\n    padding: 40px 32px 80px 32px;\n    border-bottom-left-radius: 10%;\n    height: 248px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding: 40px 123px 80px 123px;\n  }\n`;\n","import { ReportByCategories } from 'components/ReportByCategories/ReportByCategories';\nimport { TotalTransactionsData } from 'components/TotalTransactionsData/TotalTransactionsData';\nimport { MainContainer } from './ReportsPage.styled';\n// import { Slider } from 'components/Reports/ReportsNav/Slider/Slider';\nimport { Loader } from 'components/Loader/Loader';\nimport { useSelector } from 'react-redux';\n// import ChartReport from 'components/ChartReport/ChartReport';\n\nimport { selectIsRefreshing } from 'redux/user/selectors';\nimport { Balance } from 'components/Balance/Balance';\n// import { Balance } from 'components/Balance/Balance';\n\nconst ReportsPage = () => {\n  // const isLoading = useSelector(getIsloading);\n\n  const isRefreshing = useSelector(selectIsRefreshing);\n\n  return isRefreshing ? (\n    <Loader />\n  ) : (\n    <MainContainer>\n      {/* <Slider /> */}\n      <Balance />\n      <TotalTransactionsData />\n      <ReportByCategories />\n    </MainContainer>\n  );\n};\n\nexport default ReportsPage;\n"],"names":["ExpensesItem","styled","Container","Total","Label","Image","ExpensesReportElement","num","label","total","url","handleClick","name","toFixed","replace","src","alt","ExpensesList","useWindowDimensions","isInBrowserEnvironment","window","useState","width","innerWidth","height","innerHeight","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","ChartReport","sortEntries","thesaurus","useSelector","selectCurrentReport","Продукты","Алкоголь","Развлечения","Здоровье","Транспорт","Техника","Образование","Прочее","data","map","item","screenWidth","RenderCategoryLabel","x","y","value","dy","fontSize","fill","textAnchor","className","css","BarChart","screen","length","margin","top","layout","XAxis","axisLine","type","hide","YAxis","dataKey","tickCount","CartesianGrid","vertical","Bar","domain","barSize","radius","LabelList","content","entry","index","Cell","ExpensesReport","transactions","setTransactions","expensesData","selectTransactionDataExpensesData","entries","Object","sort","firstEl","secondEl","el","expensesDictionary","img","imgProducts","imgAlcohol","imgEntertainment","imgHealth","imgTransport","imgHousing","imgTechnique","imgCommunal","imgSports","imgEducation","imgOther","categoryName","sortedCategoryTransactions","filter","Boolean","IncomesItem","IncomesReportElement","IncomesContainer","IncomesList","IncomesReport","incomesData","selectTransactionDataIncomesData","incomesDictionary","imgSalary","imgAddincome","ReportContainer","ReportType","ReportName","BtnReport","GrFormPreviousStyled","GrFormPrevious","GrFormNextStyled","GrFormNext","ReportByCategories","curReport","dispatch","useDispatch","toggleReportType","changeReportType","onClick","TotalData","Type","typeReport","TotalTransactionsData","dataIncomes","selectTransactionDataIncomes","dataExpenses","selectTransactionDataExpenses","expenseTotal","incomeTotal","MainContainer","selectIsRefreshing","Loader","Balance"],"sourceRoot":""}