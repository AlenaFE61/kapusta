{"version":3,"file":"static/js/639.bb70a8fa.chunk.js","mappings":"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","sources":["images/array-to-back.svg","components/Balance/Balance.styled.js","components/BalanceModal/BalanceModal.styled.jsx","components/BalanceModal/BalanceModal.jsx","components/LightModalWindow/LightModalWindow.styled.jsx","components/Buttons/Buttons.styled.jsx","components/Buttons/OrangeButton.jsx","components/Buttons/WhiteButton.jsx","images/close.svg","components/LightModalWindow/LightModalWindow.jsx","components/Reports/ReportsNav/Slider/SliderUtils.jsx","components/Reports/ReportsNav/Slider/ButtonsNextPrev/ButtonsNextPrev.styled.js","images/reportsFiles/reports.svg","components/Reports/ReportsNav/Slider/ButtonsNextPrev/ButtonsNextPrev.jsx","components/Reports/ReportsNav/Slider/Calendar/Calendar.styled.jsx","components/Reports/ReportsNav/Slider/Calendar/Calendar.jsx","components/Reports/ReportsNav/Slider/Slider.styled.jsx","components/Reports/ReportsNav/Slider/Slider.jsx","components/Balance/Balance.js"],"sourcesContent":["var _g, _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgArrayToBack(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 1434,\n    height: 1024,\n    viewBox: \"0 0 1434 1024\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"icomoon-ignore\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff751d\",\n    d: \"M1408 435.2h-1088.256l274.944-275.712-108.288-108.288-460.8 460.8 460.8 460.8 108.288-108.288-274.944-275.712h1088.256v-153.6z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrayToBack);\nexport default __webpack_public_path__ + \"static/media/array-to-back.1f1b8c62c9a712abe90909182d2f755b.svg\";\nexport { ForwardRef as ReactComponent };","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nexport const BG = styled.div`\n  @media screen and (min-width: 768px) {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding-bottom: 20px;\n  }\n`;\nexport const Wrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  @media screen and (min-width: 768px) {\n    width: 100%;\n    flex-direction: row;\n    justify-content: space-between;\n  }\n`;\nexport const BalanceContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    gap: 21px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    flex-grow: 1;\n    justify-content: center;\n  }\n`;\nexport const BalanceWrap = styled(Link)`\n  padding-top: 20px;\n  margin-bottom: 35px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  color: rgba(82, 85, 95, 0.7);\n  font-size: 12px;\n  line-height: calc(14 / 12);\n  @media screen and (min-width: 768px) {\n    padding-top: 0;\n    margin-bottom: 0;\n    order: 1;\n  }\n`;\nexport const BalanceTitle = styled.p`\n  text-align: center;\n  font-weight: 500;\n  color: rgba(82, 85, 95, 0.7);\n  margin-bottom: 8px;\n`;\nexport const BalanceForm = styled.form`\n  display: flex;\n  padding-bottom: 20px;\n  justify-content: center;\n  align-items: center;\n  @media screen and (min-width: 768px) {\n    padding-bottom: 0;\n    gap: 21px;\n  }\n`;\nexport const BalanceInput = styled.input`\n  padding: 0 10px;\n  width: 80px;\n  min-height: 44px;\n  border: 2px solid #ffffff;\n  border-radius: 22px 0px 0px 22px;\n  background: #f5f6fb;\n  color: #000000;\n  &::placeholder {\n    font-weight: 700;\n    display: flex;\n    align-items: center;\n    text-align: right;\n    text-transform: uppercase;\n    color: #000000;\n  }\n  @media screen and (min-width: 768px) {\n    border-radius: 16px;\n    width: 140px;\n    min-height: 44px;\n    padding: 0 20px;\n  }\n`;\nexport const BalanceBtn = styled.button`\n  width: 80px;\n  min-height: 44px;\n  border-radius: 0px 22px 22px 0px;\n  background: #f5f6fb;\n  border: 2px solid #ffffff;\n  color: rgba(82, 85, 95, 0.7);\n  text-transform: uppercase;\n  &:active {\n    background: #ff751d;\n    color: #ffffff;\n  }\n  @media screen and (min-width: 768px) {\n    border-radius: 16px;\n    width: 140px;\n    min-height: 44px;\n    padding: 0 20px;\n  }\n`;\nexport const BalanceLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  gap: 7px;\n  padding-top: 20px;\n  font-weight: 700;\n  font-size: 10px;\n  line-height: calc(12 / 10);\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n`;\nexport const StyledLink = styled(Link)`\n  padding-top: 20px;\n  @media screen and (min-width: 768px) {\n    padding: 0;\n    margin-right: 250px;\n  }\n  @media screen and (min-width: 1000px) {\n    padding: 0;\n    margin-right: 350px;\n  }\n  @media screen and (min-width: 1280px) {\n    padding: 0;\n    margin-right: 0;\n  }\n`;\nexport const BalanceBackText = styled.p`\n  color: black;\n  text-transform: uppercase;\n`;\nexport const Input = styled.input`\n  text-align: center;\n  margin-bottom: 32px;\n  padding: 0 10px;\n  width: 183px;\n  min-height: 44px;\n  border: 2px solid #ffffff;\n  border-radius: 22px;\n  background: #f5f6fb;\n  color: #000000;\n  @media screen and (min-width: 768px) {\n    margin-bottom: 0;\n    width: 125px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const StyledBackdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const StyledModalWindow = styled.div`\n  position: fixed;\n  top: 245px;\n  left: 50%;\n  transform: translateX(-50%);\n  max-width: 280px;\n  max-height: 152px;\n  width: 100%;\n  background: linear-gradient(117.84deg, #1d346a 2.84%, #031634 67.28%);\n  box-shadow: 0px 10px 60px rgba(170, 178, 197, 0.2);\n  border-radius: 30px;\n  @media screen and (min-width: 768px) {\n    max-width: 288px;\n    top: 147px;\n    left: 37%;\n  }\n  @media screen and (min-width: 1280px) {\n    max-width: 288px;\n    top: 146px;\n    left: 49%;\n  }\n  &:before {\n    content: '';\n    position: absolute;\n    width: 0;\n    height: 0;\n    top: -9%;\n    left: 20%;\n    border-left: 16px solid transparent;\n    border-right: 16px solid transparent;\n    border-bottom: 16px solid #1d346a;\n  }\n`;\n\nexport const StyledModalTitle = styled.h2`\n  padding-top: 40px;\n  padding-left: 24px;\n  padding-right: 24px;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.43;\n  margin-bottom: 20px;\n  color: #ffffff;\n  @media screen and (min-width: 768px) {\n    padding-left: 29px;\n    padding-right: 29px;\n  }\n`;\n\nexport const StyledModalText = styled.p`\n  padding-bottom: 49px;\n  padding-left: 24px;\n  padding-right: 24px;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.33;\n  color: #ffffff;\n  @media screen and (min-width: 768px) {\n    padding-left: 29px;\n    padding-right: 29px;\n  }\n`;","import React, { useEffect, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport {\n  StyledModalWindow,\n  StyledBackdrop,\n  StyledModalText,\n  StyledModalTitle,\n} from './BalanceModal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\nconst body = document.querySelector('body');\n\n\nexport default function ModalWindow() {\n  const [isModalOpen, setIsModalOpen] = useState(true);\n\n  const handleModalClose = () => {\n    setIsModalOpen(false);\n    body.classList.remove('no-scroll');\n  };\n\n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      handleModalClose();\n    }\n  };\n\n  useEffect(() => {\n    body.classList.add('no-scroll');\n    return () => body.classList.remove('no-scroll');\n  }, []);\n\n  return createPortal(\n    isModalOpen && (\n      <StyledBackdrop onClick={handleBackdropClick}>\n        <StyledModalWindow>\n          <StyledModalTitle>\n            Hello! To get started, enter the current balance of your account!\n          </StyledModalTitle>\n          <StyledModalText>\n            You can't spend money until you have it \n          </StyledModalText>\n        </StyledModalWindow>\n      </StyledBackdrop>\n    ),\n    modalRoot\n  );\n}\n","import styled from '@emotion/styled';\nexport const StyledModalWindow = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: #fff;\n  border-radius: 30px;\n  box-shadow: 10px 10px 30px rgba(82, 85, 95, 0.4);\n  color: #52555F;\n`;\n\nexport const StyledContentDiv = styled.div`\n  padding: 50px 48px 60px;\n  @media screen and (min-width: 768px) {\n    padding: 50px 58px 60px;\n  }\n`;\n\nexport const StyledText = styled.p`\n  margin-bottom: 20px;\n  text-align: center;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.14;\n  letter-spacing: 0.02em;\n`;\n\nexport const StyledDivWithButtons = styled.div`\n  display: flex;\n  gap: 15px;\n`;\n\nexport const StyledCloseButton = styled.button`\n  border: none;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  cursor: pointer;\n`;\n\nexport const StyledModalBackdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.2);\n`;","import { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const StyledOrangeButton = styled.button`\n  padding: 12px 0px;\n  width: 116px;\n  border: none;\n  background-color: #ff751d;\n  border-radius: 16px;\n  color: #fff;\n  font-weight: 700;\n  font-family: inherit;\n  text-align: center;\n  letter-spacing: 0.02em;\n  font-size: 12px;\n  line-height: 1.17;\n`;\n\nexport const StyledWhiteButton = styled.button`\n  padding: 12px 34px;\n  border: 2px solid #f5f6fb;\n  background-color: #fff;\n  border-radius: 16px;\n  color: #52555f;\n  font-size: 12px;\n  font-weight: 700;\n  font-family: inherit;\n  text-align: center;\n  letter-spacing: 0.02em;\n  line-height: 1.17;\n`;\n\nexport const ButtonBack = styled(Link)`\n  background-color: transparent;\n  border: none;\n  display: flex;\n  align-items: center;\n  margin: 14px 0px 14px 16px;\n`;","import PropTypes from 'prop-types';\nimport { StyledOrangeButton } from './Buttons.styled';\n\n// Shared button for modal windows\nexport const OrangeButton = ({\n  children,\n  dispatch,\n  closeModal,\n  changeBalance,\n}) => {\n  const handleClick = () => {\n    // Check if user want to logout\n    if (children === 'YES') {\n      dispatch();\n      closeModal();\n    }\n    // Check if user want to update balance\n    if (changeBalance) {\n      dispatch();\n      closeModal();\n    }\n  };\n\n  return (\n    <StyledOrangeButton onClick={handleClick}>{children}</StyledOrangeButton>\n  );\n};\n\nOrangeButton.propTypes = {\n  children: PropTypes.string.isRequired,\n  dispatch: PropTypes.func,\n  closeModal: PropTypes.func,\n  changeBalance: PropTypes.func,\n};","import PropTypes from 'prop-types';\nimport { StyledWhiteButton } from './Buttons.styled';\n\nexport const WhiteButton = ({ children, closeModal }) => {\n  return <StyledWhiteButton onClick={closeModal}>{children}</StyledWhiteButton>;\n};\n\nWhiteButton.propTypes = {\n  children: PropTypes.string.isRequired,\n  closeModal: PropTypes.func,\n};","var _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgClose(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 14,\n    height: 14,\n    viewBox: \"0 0 14 14\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1 1L13 13\",\n    stroke: \"#52555F\",\n    strokeWidth: 2\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1 13L13 0.999999\",\n    stroke: \"#52555F\",\n    strokeWidth: 2\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgClose);\nexport default __webpack_public_path__ + \"static/media/close.725652eddfe0bd34d7c252763578a80c.svg\";\nexport { ForwardRef as ReactComponent };","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport {\n  StyledModalWindow,\n  StyledContentDiv,\n  StyledText,\n  StyledDivWithButtons,\n  StyledCloseButton,\n  StyledModalBackdrop,\n} from './LightModalWindow.styled';\nimport { OrangeButton } from 'components/Buttons/OrangeButton';\nimport { WhiteButton } from 'components/Buttons/WhiteButton';\nimport close from '../../images/close.svg';\n\n// Query selectors\nconst modalRoot = document.getElementById('modal-root');\nconst body = document.querySelector('body');\n\n// Modal window\nexport const LightModalWindow = ({\n  children,\n  closeModal,\n  dispatch,\n  changeBalance,\n  text,\n}) => {\n  // Close on Esc button\n  const handleEscapeClose = event => {\n    if (event.code === 'Escape') {\n      closeModal();\n    }\n  };\n  // Close on backdrop click\n  const handleBackdropClose = event => {\n    if (event.target === event.currentTarget) {\n      closeModal();\n    }\n  };\n  // No scroll of body when modal window is open\n  useEffect(() => {\n    window.addEventListener('keydown', handleEscapeClose);\n\n    return () => {\n      window.removeEventListener('keydown', handleEscapeClose);\n      body.classList.toggle('no-scroll');\n    };\n  });\n\n  return createPortal(\n    // Backdrop\n    <StyledModalBackdrop\n      className=\"modal-backdrop\"\n      onClick={handleBackdropClose}\n    >\n      {/* Modal window */}\n      <StyledModalWindow>\n        {/* Close button img X */}\n        <StyledCloseButton onClick={closeModal}>\n          <img src={close} alt=\"close\" />\n        </StyledCloseButton>\n        <StyledContentDiv>\n          <StyledText>{text ? text : 'Are you sure?'}</StyledText>\n          <StyledDivWithButtons>\n            <OrangeButton\n              dispatch={dispatch}\n              closeModal={closeModal}\n              changeBalance={changeBalance}\n              type=\"submit\"\n            >\n              {text ? text : 'YES'}\n            </OrangeButton>\n            <WhiteButton closeModal={closeModal}>NO</WhiteButton>\n          </StyledDivWithButtons>\n        </StyledContentDiv>\n      </StyledModalWindow>\n    </StyledModalBackdrop>,\n    modalRoot\n  );\n};\n\nLightModalWindow.propTypes = {\n  children: PropTypes.string.isRequired,\n  closeModal: PropTypes.func.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  changeBalance: PropTypes.func,\n  text: PropTypes.string,\n};","const dateNow = new Date();\n\nexport const monthNames = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nexport const getMonth = () => dateNow.getMonth();\nexport const getYear = () => dateNow.getFullYear();","import styled from '@emotion/styled';\n\nexport const ButtonBox = styled.div`\n  margin-top: 5px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nexport const Button = styled.button`\n  background-color: transparent;\n  border: transparent;\n  padding: 0%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","var _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgReports(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-prev\",\n    viewBox: \"0 0 19 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#ff751d\",\n    style: {\n      stroke: \"var(--color2, #ff751d)\"\n    },\n    strokeLinejoin: \"miter\",\n    strokeLinecap: \"butt\",\n    strokeMiterlimit: 4,\n    strokeWidth: 5.3333,\n    d: \"M16 2.667l-10.667 13.333 10.667 13.333\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-next\",\n    viewBox: \"0 0 19 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#ff751d\",\n    style: {\n      stroke: \"var(--color2, #ff751d)\"\n    },\n    strokeLinejoin: \"miter\",\n    strokeLinecap: \"butt\",\n    strokeMiterlimit: 4,\n    strokeWidth: 5.3333,\n    d: \"M2.667 2.667l10.667 13.333-10.667 13.333\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgReports);\nexport default __webpack_public_path__ + \"static/media/reports.22c7d3ee7969e983d42c47aef02ec127.svg\";\nexport { ForwardRef as ReactComponent };","import PropTypes from 'prop-types';\nimport { ButtonBox, Button } from './ButtonsNextPrev.styled';\nimport reports from '../../../../../images/reportsFiles/reports.svg';\n\nexport const ButtonsNextPrev = ({ onButtonClick, children }) => {\n  const handlerClick = event => {\n    const name = event.currentTarget.name;\n    onButtonClick(name);\n  };\n\n  return (\n    <ButtonBox>\n      <Button name=\"decrement\" onClick={handlerClick}>\n        <svg width=\"6\" height=\"12\">\n          <use href={`${reports}#icon-prev`}></use>\n        </svg>\n      </Button>\n      {children}\n      <Button name=\"increment\" onClick={handlerClick}>\n        <svg width=\"6\" height=\"12\">\n          <use href={`${reports}#icon-next`}></use>\n        </svg>\n      </Button>\n    </ButtonBox>\n  );\n};\n\nButtonsNextPrev.propTypes = {\n  onButtonClick: PropTypes.func.isRequired,\n};","import styled from '@emotion/styled';\n\nexport const Backdrop = styled.div`\n  z-index: 2;\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0%;\n  background-color: rgba(0, 0, 0, 0.5);\n`;\n\nexport const CalendarBox = styled.div`\n  position: absolute;\n  background-color: #fff;\n  z-index: 10;\n  width: 60%;\n  border-radius: 20px;\n  padding: 10px 0;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const Month = styled.li`\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.22;\n  color: #52555f;\n  &.active {\n    color: #ff751d;\n  }\n`;\n\nexport const Year = styled.p`\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 16px;\n  letter-spacing: 0.02em;\n  color: #000000;\n  padding: 0 10px;\n`;\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { monthNames } from '../SliderUtils';\nimport { ButtonsNextPrev } from '../ButtonsNextPrev/ButtonsNextPrev';\nimport { Month, Year, CalendarBox, Backdrop } from './Calendar.styled';\n\nexport const Calendar = ({\n  onClose,\n  currentMonth,\n  currentYear,\n  onChangeDate,\n}) => {\n  const handleYear = name => {\n    onChangeDate(name);\n  };\n\n  const handleMonth = event => {\n    const choosedMonth = event.currentTarget.textContent;\n    const name = monthNames.indexOf(choosedMonth);\n    onChangeDate(name);\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handleBackdrop = event => {\n    if (event.target === event.currentTarget) {\n      onClose();\n    }\n  };\n\n  const handleKeyDown = event => {\n    if (event.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  return (\n    <Backdrop onClick={handleBackdrop}>\n      <CalendarBox>\n        <ButtonsNextPrev onButtonClick={handleYear}>\n          {' '}\n          <Year>{currentYear}</Year>\n        </ButtonsNextPrev>\n\n        <ul>\n          {monthNames.map(el => {\n            return (\n              <Month\n                className={el === currentMonth ? 'active' : ''}\n                onClick={handleMonth}\n                key={el}\n              >\n                {el}\n              </Month>\n            );\n          })}\n        </ul>\n      </CalendarBox>\n    </Backdrop>\n  );\n};\n\nCalendar.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  currentMonth: PropTypes.string.isRequired,\n  currentYear: PropTypes.number.isRequired,\n  onChangeDate: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const SliderBox = styled.div`\n  margin-bottom: 32px;\n  padding-top: 16px;\n  text-align: center;\n  position: relative;\n  @media (min-width: 768px) {\n    padding-top: 0;\n    order: 3;\n  }\n`;\n\nexport const SliderText = styled.button`\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 16px;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  padding: 0 5px;\n  border: none;\n  color: #000000;\n  background-color: transparent;\n`;\nexport const CurPeriod = styled.p`\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 14px;\n  text-align: center;\n  letter-spacing: 0.04em;\n  color: rgba(82, 85, 95, 0.7);\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { monthNames, getMonth, getYear } from './SliderUtils';\nimport { Calendar } from './Calendar/Calendar';\nimport { CurPeriod, SliderBox, SliderText } from './Slider.styled';\nimport { ButtonsNextPrev } from './ButtonsNextPrev/ButtonsNextPrev';\nimport { getPeriodData } from 'redux/Transactions/TransactionsOperations';\nimport { setReportsQuery } from 'redux/Transactions/TransactionsSlice';\n\nexport const Slider = () => {\n  const [monthNumber, setMonthNumber] = useState(0);\n  const [month, setMonth] = useState('');\n  const [year, setYear] = useState('');\n  const [modalCalendar, setModalCalendar] = useState(false);\n\n  const dispatch = useDispatch();\n  const [searchParams, setSearchParams] = useSearchParams();\n  console.log(searchParams);\n  useEffect(() => {\n    setMonthNumber(getMonth());\n    setMonth(monthNames[getMonth()]);\n    setYear(getYear());\n  }, []);\n\n  useEffect(() => {\n    setMonth(monthNames[monthNumber]);\n    let monthString = '';\n\n    if (monthNumber + 1 < 10) {\n      monthString = '0' + (monthNumber + 1);\n    } else {\n      monthString = monthNumber + 1;\n    }\n    const query = `${year}-${monthString}`;\n\n    if (query === '-01') return;\n\n    setSearchParams({ date: query });\n\n    dispatch(setReportsQuery(query));\n    dispatch(getPeriodData(query));\n  }, [monthNumber, year, dispatch, setSearchParams]);\n\n  const handlerClick = name => {\n    switch (name) {\n      case 'decrement':\n        setMonthNumber(monthNumber - 1);\n        if (monthNumber === 0) {\n          setMonthNumber(11);\n          setYear(year - 1);\n        }\n        break;\n      case 'increment':\n        setMonthNumber(monthNumber + 1);\n        if (monthNumber === 11) {\n          setMonthNumber(0);\n          setYear(year + 1);\n        }\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleModalCalendar = () => {\n    setModalCalendar(modalCalendar => !modalCalendar);\n  };\n\n  const handleCalendar = name => {\n    switch (name) {\n      case 'decrement':\n        setYear(year - 1);\n\n        break;\n      case 'increment':\n        setYear(year + 1);\n        break;\n      default:\n        setMonthNumber(name);\n        return;\n    }\n  };\n\n  return (\n    <SliderBox>\n      <CurPeriod>Current period:</CurPeriod>\n      <ButtonsNextPrev onButtonClick={handlerClick}>\n        <SliderText onClick={handleModalCalendar}>\n          {month} {year}\n        </SliderText>\n      </ButtonsNextPrev>\n      {modalCalendar && (\n        <Calendar\n          currentYear={year}\n          currentMonth={month}\n          onChangeDate={handleCalendar}\n          onClose={handleModalCalendar}\n        />\n      )}\n    </SliderBox>\n  );\n};\n","import { useState, useRef } from 'react';\nimport { FiBarChart2 } from 'react-icons/fi';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { balance } from 'redux/Transactions/TransactionsOperations';\nimport back from 'images/array-to-back.svg';\nimport {\n  BG,\n  BalanceBackText,\n  BalanceBtn,\n  BalanceContainer,\n  BalanceForm,\n  BalanceInput,\n  BalanceLink,\n  BalanceTitle,\n  BalanceWrap,\n  Input,\n  StyledLink,\n  Wrap,\n} from './Balance.styled';\n\nimport ModalWindow from '../BalanceModal/BalanceModal';\nimport { LightModalWindow } from 'components/LightModalWindow/LightModalWindow';\nimport { useLocation } from 'react-router-dom';\nimport { Slider } from 'components/Reports/ReportsNav/Slider/Slider';\n\nexport function Balance() {\n  const location = useLocation();\n  const isReportPage = location.pathname.includes('expenses') ? true : false;\n  const goBackLink = location?.state?.from ?? '/';\n  const [modalOpen, setModalOpen] = useState(false);\n  const stateBalance = useSelector(state => state.transactions.newBalance);\n  const items = useSelector(state => state.transactions.items);\n  const form = useRef();\n  const dispatch = useDispatch();\n\n  const [number, setNumber] = useState('');\n  const formSubmit = e => {\n    e.preventDefault();\n  };\n  const inputChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  // Handle update users balance\n  const handleClick = () => {\n    dispatch(balance({ newBalance: Number(number.replace(/\\s+/g, '')) }));\n    form.current.reset();\n  };\n  // Open modal window\n  const handleModalOpen = () => {\n    setModalOpen(true);\n  };\n  // Close modal window\n  const handleModalClose = () => {\n    setModalOpen(false);\n  };\n\n  return (\n    <BG>\n      {isReportPage ? (\n        <BalanceLink to={goBackLink}>\n          <img width=\"24\" height=\"24\" src={back} alt=\"back\"></img>\n          <BalanceBackText>TO TRANSACTION</BalanceBackText>\n        </BalanceLink>\n      ) : (\n        <StyledLink to={goBackLink}>\n          {' '}\n          <img width=\"24\" height=\"24\" src={back} alt=\"back\"></img>\n        </StyledLink>\n      )}\n\n      {!isReportPage && <Slider />}\n      <Wrap>\n        {isReportPage && (\n          <BalanceWrap to=\"/transaction/period-data\">\n            Reports\n            <FiBarChart2 />\n          </BalanceWrap>\n        )}\n        <BalanceContainer>\n          <BalanceTitle className=\"title\">Balance:</BalanceTitle>\n          {isReportPage ? (\n            <BalanceForm onSubmit={formSubmit} ref={form}>\n              <label>\n                <BalanceInput\n                  className=\"inputTag\"\n                  type=\"text\"\n                  name=\"number\"\n                  title=\"Please, enter your balance\"\n                  pattern=\"[0-9, .UAH]*\"\n                  value={stateBalance}\n                  onChange={inputChange}\n                  placeholder={`${stateBalance}.00 UAH`}\n                  required\n                />\n              </label>\n              <BalanceBtn\n                type=\"button\"\n                className=\"btn\"\n                onClick={handleModalOpen}\n              >\n                Confirm\n              </BalanceBtn>\n              {!stateBalance && !items.length && <ModalWindow />}\n            </BalanceForm>\n          ) : (\n            <Input\n              type=\"text\"\n              name=\"number\"\n              onChange={inputChange}\n              value={stateBalance}\n            />\n          )}\n\n          {modalOpen && (\n            <LightModalWindow\n              changeBalance=\"true\"\n              closeModal={handleModalClose}\n              dispatch={handleClick}\n              text=\"SURE\"\n              balance={balance}\n            >\n              Are you sure?\n            </LightModalWindow>\n          )}\n        </BalanceContainer>\n      </Wrap>\n    </BG>\n  );\n}\n"],"names":["BG","styled","Wrap","BalanceContainer","BalanceWrap","Link","BalanceTitle","BalanceForm","BalanceInput","BalanceBtn","BalanceLink","StyledLink","BalanceBackText","Input","StyledBackdrop","StyledModalWindow","StyledModalTitle","StyledModalText","modalRoot","document","querySelector","body","ModalWindow","useState","isModalOpen","setIsModalOpen","useEffect","classList","add","remove","createPortal","onClick","event","currentTarget","target","StyledContentDiv","StyledText","StyledDivWithButtons","StyledCloseButton","StyledModalBackdrop","StyledOrangeButton","StyledWhiteButton","OrangeButton","children","dispatch","closeModal","changeBalance","WhiteButton","getElementById","LightModalWindow","text","handleEscapeClose","code","window","addEventListener","removeEventListener","toggle","className","src","close","alt","type","dateNow","Date","monthNames","getMonth","ButtonBox","Button","ButtonsNextPrev","onButtonClick","handlerClick","name","width","height","href","reports","Backdrop","CalendarBox","Month","Year","Calendar","onClose","currentMonth","currentYear","onChangeDate","handleMonth","choosedMonth","textContent","indexOf","handleKeyDown","map","el","SliderBox","SliderText","CurPeriod","Slider","monthNumber","setMonthNumber","month","setMonth","year","setYear","modalCalendar","setModalCalendar","useDispatch","useSearchParams","searchParams","setSearchParams","console","log","getFullYear","monthString","query","date","setReportsQuery","getPeriodData","handleModalCalendar","Balance","location","useLocation","isReportPage","pathname","includes","goBackLink","state","from","modalOpen","setModalOpen","stateBalance","useSelector","transactions","newBalance","items","form","useRef","number","setNumber","inputChange","value","to","back","onSubmit","e","preventDefault","ref","title","pattern","onChange","placeholder","required","length","balance","Number","replace","current","reset"],"sourceRoot":""}